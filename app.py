import streamlit as st
import pandas as pd
import numpy as np

GENRES = [
    '–§—ç–Ω—Ç–µ–∑–∏', '–†–æ–º–∞–Ω', '–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞', '–ú–æ–ª–æ–¥–µ–∂–Ω–∞—è –ø—Ä–æ–∑–∞',
    '–ü–æ–ø–∞–¥–∞–Ω—Ü—ã', '–≠—Ä–æ—Ç–∏–∫–∞', '–§–∞–Ω—Ñ–∏–∫', '–î–µ—Ç–µ–∫—Ç–∏–≤—ã',
    '–ü—Ä–æ–∑–∞', '–¢—Ä–∏–ª–ª–µ—Ä—ã', '–ú–∏—Å—Ç–∏–∫–∞/–£–∂–∞—Å—ã', '–†–∞–∑–Ω–æ–µ',
    '–ù–æ–Ω-—Ñ–∏–∫—à–Ω', '–ú–∏–Ω–∏'
]

GENRES_DICT = {
    '–í—Å–µ –∂–∞–Ω—Ä—ã': 'genres.csv',
    '–§—ç–Ω—Ç–µ–∑–∏': 'phantasy.csv',
    '–†–æ–º–∞–Ω': 'novels.csv',
    '–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞': 'phantastic.csv',
    '–ú–æ–ª–æ–¥–µ–∂–Ω–∞—è –ø—Ä–æ–∑–∞': 'prose.csv',
    '–ü–æ–ø–∞–¥–∞–Ω—Ü—ã': 'popadancy.csv',
    '–≠—Ä–æ—Ç–∏–∫–∞': 'erotika.csv',
    '–§–∞–Ω—Ñ–∏–∫': 'fanfiki.csv',
    '–î–µ—Ç–µ–∫—Ç–∏–≤—ã': 'detective.csv',
    '–ü—Ä–æ–∑–∞': 'proza.csv',
    '–¢—Ä–∏–ª–ª–µ—Ä—ã': 'triller.csv',
    '–ú–∏—Å—Ç–∏–∫–∞/–£–∂–∞—Å—ã': 'horror.csv',
    '–†–∞–∑–Ω–æ–µ': 'raznoye.csv',
    '–ù–æ–Ω-—Ñ–∏–∫—à–Ω': 'non-fiction.csv',
    '–ú–∏–Ω–∏': 'mini.csv'
}

BASE_PATH = './data/genres/'

if 'search_triggered' not in st.session_state:
    st.session_state.search_triggered = False
if 'page' not in st.session_state:
    st.session_state.page = 1

@st.cache_data
def load_books(genre):
    return pd.read_csv(BASE_PATH+GENRES_DICT[genre])



st.title('üìö –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ü–æ–∏—Å–∫ –ö–Ω–∏–≥')

col1, col2 = st.columns([4,1])
with col1:
    query = st.text_input(
        '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å', label_visibility='collapsed'
    )
with col2:
    if st.button('–ù–∞–π—Ç–∏'):
        st.session_state.search_triggered = True
        st.session_state.page = 1
    
genre = st.selectbox("üìö –§–∏–ª—å—Ç—Ä –ø–æ –∂–∞–Ω—Ä—É", ['–í—Å–µ –∂–∞–Ω—Ä—ã'] + GENRES)
    
    
items_per_page = st.number_input(
    '–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ', min_value=1, max_value=10, value=3, step=1
)

if st.session_state.search_triggered:
    books = load_books(genre)
    total_books = books.shape[0]
    num_pages = (total_books + items_per_page - 1) // items_per_page
    
    
    
    nav_col1, nav_col2, nav_col3 = st.columns([1, 2, 1])
    st.markdown(f"üîé **–ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:** {total_books}")
    with nav_col1:
        if st.button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", key='prev_top') and st.session_state.page > 1:
            st.session_state.page -=1
    with nav_col2:
        st.markdown(f'**–°—Ç—Ä–∞–Ω–∏—Ü–∞ {st.session_state.page} –∏–∑ {num_pages}**')
    with nav_col3:
        if st.button("–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è", key='next_top') and st.session_state.page < num_pages:
            st.session_state.page +=1
    
    
    
    start_idx = (st.session_state.page - 1) * items_per_page
    end_idx = start_idx + items_per_page
    visible_books = books.iloc[start_idx:end_idx]
    
    for index, row in visible_books.iterrows():
        with st.container():
            book_col1, book_col2 = st.columns([1,4])
            with book_col1:
                st.image(row['img_url'])
            with book_col2:
                st.markdown(f'**{row['author']}**')
                st.markdown(f'[**{row['title']}**]({row['book_url']})')
                st.markdown(f'{row['annotation']}')
                st.markdown(f'üìñ _–ñ–∞–Ω—Ä: {row['genre']}_')
            st.markdown('---')
            
            
    nav_col1, nav_col2, nav_col3 = st.columns([1, 2, 1])
    st.markdown(f"üîé **–ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:** {total_books}")
    with nav_col1:
        if st.button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", key='prev_bottom') and st.session_state.page > 1:
            st.session_state.page -=1
    with nav_col2:
        st.markdown(f'**–°—Ç—Ä–∞–Ω–∏—Ü–∞ {st.session_state.page} –∏–∑ {num_pages}**')
    with nav_col3:
        if st.button("–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è", key='next_bottom') and st.session_state.page < num_pages:
            st.session_state.page +=1